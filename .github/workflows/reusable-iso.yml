---
name: Installer ISO
on: 
  workflow_call:
    inputs:
      fedora_version:
        description: "The Fedora release version: 39, 40, 41 etc"
        type: string
        required: true
jobs:
  build_iso:
    name: Build Installer ISO
    runs-on: ubuntu-latest
    outputs:
      iso_name: ${{ steps.build_iso.outputs.iso_name }}
      checksum: ${{ steps.build_iso.outputs.iso_name }}-CHECKSUM
    strategy:
      fail-fast: false
      matrix:
        fedora_version:
        - ${{ inputs.fedora_version }}
        hyprland_build:
        - fedora
        - solopasha
        - git
    env:
      ARCH: "x86_64"
      IMAGE_NAME: ${{ github.event.repository.name }}-${{ matrix.hyprland_build }}
      IMAGE_REPO: "ghcr.io/cjuniorfox"
      IMAGE_TAG: ${{ matrix.fedora_version }}
      VARIANT: "base-main"
      VERSION: ${{ matrix.fedora_version }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      S3_BUCKET: juniorfox-net-isos
      AWS_REGION: sa-east-1

    steps:
      - name: Checkout Push to Registry action
        uses: actions/checkout@v4
  
      - name: Build ISO
        uses: jasonn3/build-container-installer@v1.2.2
        id: build_iso
        with:
          arch: ${{ env.ARCH }}
          image_name: ${{ env.IMAGE_NAME }}
          image_repo: ${{ env.IMAGE_REPO }}
          image_tag: ${{ env.IMAGE_TAG }}
          version: ${{ env.VERSION }}
          variant: ${{ env.VARIANT }}
          iso_name: ${{ env.IMAGE_NAME }}-${{ env.ARCH }}-${{ env.IMAGE_TAG }}.iso
          secure_boot_key_url: 'https://github.com/ublue-os/akmods/raw/main/certs/public_key.der'
          enrollment_password: 'ublue-os'
          enable_cache_dnf: "false"
          enable_cache_skopeo: "false"
          flatpak_remote_refs: "com.github.tchx84.Flatseal \
            org.gnome.Calculator \
            org.gnome.Evince \
            org.gnome.FileRoller \
            org.gnome.FontManager \
            org.gnome.Loupe \
            org.gnome.TextEditor \
            org.mozilla.firefox \
            org.freedesktop.Platform.openh264/x86_64/2.4.1 \
            org.freedesktop.Platform.ffmpeg-full/x86_64/24.08"
  
      - name: Move ISOs to Upload Directory
        id: upload_directory
        shell: bash
        run: |
          ISO_UPLOAD_DIR=${{ github.workspace }}/upload
          mkdir ${ISO_UPLOAD_DIR}
          mv ${{ steps.build_iso.outputs.iso_path }}/${{ steps.build_iso.outputs.iso_name }} ${ISO_UPLOAD_DIR}
          mv ${{ steps.build_iso.outputs.iso_path }}/${{ steps.build_iso.outputs.iso_name }}-CHECKSUM ${ISO_UPLOAD_DIR}
          echo "iso-upload-dir=${ISO_UPLOAD_DIR}" >> $GITHUB_OUTPUT
            
      - name: Upload ISO as artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build_iso.outputs.iso_name }}
          path: ${{ steps.upload_directory.outputs.iso-upload-dir }}
          if-no-files-found: error
          retention-days: 1 # Updated to a valid retention period

      - name: Download ISO Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.build_iso.outputs.iso_name}}
          path: ./iso-output
          
      - name: Upload ISO to S3
        id: upload_to_s3
        run: |
          echo "uploading ${{ steps.build_iso.outputs.iso_name }}"
          aws s3 cp "./iso-output/${{ steps.build_iso.outputs.iso_name }}" "s3://${{ env.S3_BUCKET }}/${{ steps.build_iso.outputs.iso_name }}"
          aws s3 cp "./iso-output/${{ steps.build_iso.outputs.iso_name }}.CHECKSUM" "s3://${{ env.S3_BUCKET }}/${{ steps.build_iso.outputs.iso_name }}.CHECKSUM"

      - name: Make ISO public
        id: make_public
        run : |
          aws s3api put-object-acl --bucket ${{ env.S3_BUCKET }} --key "${{ steps.build_iso.outputs.iso_name }}" --acl public-read
          aws s3api put-object-acl --bucket ${{ env.S3_BUCKET }} --key "${{ steps.build_iso.outputs.iso_name }}" --acl public-read
        
      - name: Output ISO url
        id: upload_iso_url
        run : |
          echo "https://${{ env.S3_BUCKET }}.s3.${{ env.AWS_REGION }}.amazonaws.com/${{ steps.build_iso.outputs.iso_name }}"
          echo "https://${{ env.S3_BUCKET }}.s3.${{ env.AWS_REGION }}.amazonaws.com/${{ steps.build_iso.outputs.iso_name }}"
      
      - name : Authenticate to ISO Server
        id: authenticate_to_iso_server
        run : |
          echo "TOKEN=$(curl -X POST 'https://${{secrets.UPLOAD_SERVER}}/token' -H 'Content-Type: application/json' -d '{ \"public_key\":\"${{secrets.PUBLIC_KEY_PEM}}\"}' | jq -r .access_token)" >> $GITHUB_ENV
      - name : Upload_ISO to_Server
        id: upload_iso_to_server
        run : |
          curl -X POST -F "file=@./iso-output/${{ steps.build_iso.outputs.iso_name }}" -H "Authorization: Bearer ${{env.TOKEN}}" https://${{secrets.UPLOAD_SERVER}}/upload
          curl -X POST -F "file=@./iso-output/${{ steps.build_iso.outputs.iso_name }}.CHECKSUM" -H "Authorization: Bearer ${{env.TOKEN}}" https://${{secrets.UPLOAD_SERVER}}/upload